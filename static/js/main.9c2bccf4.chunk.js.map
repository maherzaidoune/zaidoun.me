{"version":3,"sources":["utils/Color.js","component/Header.js","component/Actions.js","component/Me.js","redux/reducers/refindReducer.js","redux/reducers/index.js","redux/actions/types.js","component/Footer.js","App.js","serviceWorker.js","index.js"],"names":["Color","main","mainLight","primary","secondary","white","Header","View","style","styles","header","Text","title","PureComponent","StyleSheet","create","backgroundColor","alignItems","justifyContent","padding","margin","color","fontSize","fontWeight","Actions","flexDirection","TouchableOpacity","calltoaction","seperator","flex","width","height","marginTop","marginBottom","Me","info","infotext","Component","textAlign","INIT_STATE","READING_LIST","rootReducer","combineReducers","Refind","state","action","console","log","type","payload","Footer","footer","footerInfo","footerDesc","Image","marginLeft","marginRight","source","uri","position","bottom","store","createStore","applyMiddleware","ReduxThunk","Home","container","ScrollView","flexGrow","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.9c2bccf4.chunk.js","sourcesContent":["const Color = {\n    main: '#21232d',\n    mainLight: '#2D5F73',\n    primary : '#f92672',\n    secondary: \"#57c7ff\",\n    white: '#d8d8d6'\n};\n\nexport default Color;\n","import React, { PureComponent } from 'react'\nimport { Text, View, StyleSheet } from 'react-native-web'\nimport Color from '../utils/Color';\n\nexport default class Header extends PureComponent {\n    render() {\n        return (\n            <View style={styles.header}>\n                <Text style={styles.title} >Zaidoun.me</Text>\n            </View>\n        )\n    }\n}\nconst styles = StyleSheet.create({\n    header: {\n      backgroundColor: Color.main,\n      alignItems: 'center',\n      justifyContent: 'center',\n      padding: 10,\n      margin: 20,\n    },\n    title: {\n      color: Color.main,\n      padding: 20,\n      backgroundColor: Color.primary,\n      fontSize: 32,\n      fontWeight: '700'\n    }\n  });","import React, { PureComponent } from 'react'\nimport { Text, View, StyleSheet, TouchableOpacity } from 'react-native-web'\nimport Color from '../utils/Color';\n\nexport default class Actions extends PureComponent {\n    render() {\n        return (\n            <View style={{alignItems: 'center'}}>\n                <View style={[styles.header, { flexDirection: 'row' }]}>\n                    <TouchableOpacity>\n                        <Text style={styles.calltoaction} >About</Text>\n                    </TouchableOpacity>\n                    <TouchableOpacity>\n                        <Text style={styles.calltoaction} >Blog</Text>\n                    </TouchableOpacity>\n                    <TouchableOpacity>\n                        <Text style={styles.calltoaction} >Hire me</Text>\n                    </TouchableOpacity>\n                </View>\n                <View style={styles.seperator}></View>\n            </View>\n\n        )\n    }\n}\nconst styles = StyleSheet.create({\n    header: {\n        flex: 0,\n        alignItems: 'center',\n        justifyContent: 'center',\n        padding: 20,\n    },\n    calltoaction: {\n        color: Color.white,\n        fontSize: 18,\n        fontWeight: '500',\n        padding: 12\n    },\n    seperator: {\n        width: '40vw',\n        height: 1,\n        backgroundColor: Color.white,\n        marginTop: 10,\n        marginBottom: 10\n    }\n});","import React, { Component } from 'react'\nimport { Text, View, StyleSheet } from 'react-native-web'\nimport Color from '../utils/Color';\n\nexport default class Me extends Component {\n  render() {\n    return (\n      <View style={styles.info}>\n        <Text style={styles.infotext} >\n          My name is Maher Zaidoune.{\"\\n\"}\n          I'm a mobile application developer from <Text style={[styles.infotext, { color: Color.secondary, fontSize: 20, padding: 5 }]} >Tunisia</Text>\n          {\"\\n\"} I live in <Text style={[styles.infotext, { color: Color.secondary, fontSize: 20, padding: 5 }]} >Sousse</Text> and work at <Text style={[styles.infotext, { color: Color.secondary, fontSize: 20, padding: 5 }]} >Satoripop</Text> .\n          {\"\\n\"}\n\n        </Text>\n      </View>\n    )\n  }\n}\nconst styles = StyleSheet.create({\n  infotext: {\n    color: Color.white,\n    fontSize: 20,\n    padding: 20,\n    fontWeight: '400',\n    textAlign: 'center',\n  },\n  info: {\n    flex: 1,\n    padding: 10\n  }\n});\n","import {\n    READING_LIST_REQUEST,\n    READING_LIST_REQUEST_SUCCESS,\n    READING_LIST_REQUEST_FAILED\n} from '../actions/types';\n\nconst INIT_STATE = {\n    READING_LIST: null\n}\nexport default (state = INIT_STATE, action) => {\n    console.log(\"action == \" + action);\n    switch (action.type) {\n        case READING_LIST_REQUEST:\n            return { ...state, READING_LIST: null };\n        case READING_LIST_REQUEST_SUCCESS:\n            return { ...state, READING_LIST: action.payload };\n        case READING_LIST_REQUEST_FAILED:\n            return { ...state, READING_LIST: null };\n        default:\n            return state;\n    }\n}","import { combineReducers } from 'redux';\nimport refindReducer from './refindReducer';\nconst rootReducer = combineReducers({\n\tRefind: refindReducer,\n});\n\nexport default (state, action) => (\n     rootReducer(state, action)\n);\n","export const READING_LIST_REQUEST = 'READING_LIST_REQUEST';\nexport const READING_LIST_REQUEST_SUCCESS = 'READING_LIST_REQUEST_SUCCESS';\nexport const READING_LIST_REQUEST_FAILED = 'READING_LIST_REQUEST_FAILED';\n\n","import React, { Component } from 'react'\nimport { Text, View, StyleSheet, Image } from 'react-native'\nimport Color from '../utils/Color';\n\nexport default class Footer extends Component {\n    render() {\n        return (\n            <View style={styles.footer}>\n                <View style={styles.seperator}></View>\n                <View style={styles.footerInfo}>\n                    <Text style={styles.footerDesc}>Buit with React Native Web</Text>\n                    <View style={{flexDirection : 'row', marginTop: 5}}>\n                        <Image\n                            style={{ width: 30, height: 30, marginLeft: 5, marginRight: 5 }}\n                            source={{ uri: 'https://img.icons8.com/doodle/192/000000/facebook-new.png' }}\n                        />\n                        <Image\n                            style={{ width: 30, height: 30, marginLeft: 5, marginRight: 5 }}\n                            source={{ uri: 'https://img.icons8.com/doodle/192/000000/github--v1.png' }}\n                        />\n                        <Image\n                            style={{ width: 30, height: 30, marginLeft: 5, marginRight: 5 }}\n                            source={{ uri: 'https://img.icons8.com/doodle/192/000000/linkedin.png' }}\n                        />\n                    </View>\n\n                </View>\n            </View>\n        )\n    }\n}\nconst styles = StyleSheet.create({\n    footer: {\n        position: 'absolute',\n        bottom: 0,\n        width: '40vw',\n        alignItems: 'center',\n    },\n    seperator: {\n        width: '40vw',\n        height: 1,\n        backgroundColor: Color.white,\n        marginTop: 10,\n    },\n    footerInfo: {\n        flex: 1,\n        alignItems: 'center',\n        justifyContent: 'center',\n        padding: 30,\n    },\n    footerDesc: {\n        color: Color.white,\n        fontSize: 15,\n        fontWeight: '400',\n        textAlign: 'center'\n    }\n});","import React, { PureComponent } from 'react';\nimport { View, StyleSheet, ScrollView } from 'react-native-web';\nimport { createStore, applyMiddleware } from 'redux';\nimport ReduxThunk from 'redux-thunk';\nimport { Provider } from 'react-redux';\nimport Color from './utils/Color';\nimport Header from './component/Header';\nimport Actions from './component/Actions';\nimport Me from './component/Me';\nimport AppReducer from './redux/reducers';\nimport Footer from './component/Footer';\n\nconst store = createStore(AppReducer, {}, applyMiddleware(ReduxThunk));\n\nclass Home extends PureComponent {\n  render() {\n    return (\n      <View style={styles.container}>\n        <ScrollView>\n          <View style={{ alignItems: 'center' }}>\n            <Header />\n            <Actions />\n            <Me />\n          </View>\n        </ScrollView>\n        <Footer />\n      </View>\n    )\n  }\n}\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Home />\n    </Provider>\n  );\n}\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: Color.main,\n    padding: 15,\n    height: \"100vh\",\n    alignItems: 'center'\n  },\n  header: {\n    flex: 0,\n    backgroundColor: Color.main,\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 10,\n  },\n  title: {\n    color: Color.white,\n    padding: 15,\n    backgroundColor: Color.primary,\n    fontSize: 26,\n    fontWeight: '600'\n  },\n  calltoaction: {\n    color: Color.white,\n    fontSize: 18,\n    fontWeight: '500',\n    padding: 12\n  },\n  infotext: {\n    color: Color.white,\n    fontSize: 18,\n    fontWeight: '400',\n    textAlign: 'center'\n  },\n  info: {\n    flexGrow: 1,\n    backgroundColor: Color.main,\n    padding: 10\n  }\n});\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}